{#
/**
 * @file
 * Theme override to display a band node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}

{%
  set classes = [
    node.bundle|clean_class,
    node.isPromoted() ? 'is-promoted',
    node.isSticky() ? 'is-sticky',
    not node.isPublished() ? 'is-unpublished',
    view_mode ? view_mode|clean_class,
    'clearfix',
  ]
%}

{% set band = constructBand(node) %}

<article{{ attributes.addClass(classes)|without('role') }} aria-label="{{ band.getTitle }}">

  <div class="band-style-general {{ band.getBandStyle() }}{{band.getBandType == "Home Current AQ Data" or band.getBandType == "Home Forecast AQ Data" ? " noData" : ""}}">
    {% if band.hasTitleSection() %}
		<div class="band-title-row{% if band.getTitle == "Explore" or band.getTitle == "Air Quality Forecast" %}-white{% else %}-light{% endif %}">
		  <div class="band-title-holder">
		  	{# AirNowDrupal #57 cw 2018-07-17  #} {# AirNowDrupal # 115 Use special style on Explore Band  cw 2019-05-06 #}
			<h1 id="{% if band.getAnchorTag() is not null %}{{ band.getAnchorTag() }}{% endif %}" class="band-title{% if band.getTitle == "Explore" or band.getTitle == "Air Quality Forecast" %}-white{% else %}-light{% endif %}" >{{ band.getTitle() }}</h1>
			{% if band.hasBackToTop() %}
			<a href="#" class="band-back-to-top hidden-xs">
			  <p class="pull-right">
				<span class="back-to-top-text">Back to top
					<span class="fa fa-chevron-circle-up pull-right"></span>
				</span>
			  </p>
			</a>
			{% endif %}
		  </div>
		</div>
    {% endif %}

      {% if band.getBandType == "General" %}
          <div class="band-card-row{% if band.getTitle == "Explore" %}-white{% else %}-light{% endif %} band-basic row">{# AirNowDrupal # 115 Use special style on Explore Band Title cw 2019-05-06 #}
		  {% for cardReference in band.getCardReference() %}
            {{ renderNode(cardReference.getNid()) }}
          {% endfor %}
        </div>
      {% elseif band.getBandType == "Announcements" %}
        {% include 'band_announcements.html.twig' %}
      {% elseif band.getBandType == "Content" %}
		  <div class="band-card-row band-basic row">
			{% include 'band_content.html.twig' %}
		  </div>
      {% elseif band.getBandType == "Home Current AQ Data" %}
        <div class="band-card-row-light band-current-aq-row row"> {# AirNowDrupal #115 #}
            {% set config = {'band': band} %}
            {{ renderBlock('current_aq_data_block', config) }}
        </div>
      {% elseif band.getBandType == "Publications" %}
        <div class="band-card-row band-basic row publications-row">
          {% include 'band_publications.html.twig' %}
        </div>
	  {% elseif band.getBandType == "Partners" %}
        <div class="band-card-row band-basic row partners-row">
          {% include 'band_partners.html.twig' %}
        </div>
	  {% elseif band.getBandType == "Data Providers" %}
        <div class="band-card-row band-basic row data-providers-row">
		 {% include 'band_data_providers.html.twig' %}
        </div>
      {% elseif band.getBandType == "Home Forecast AQ Data" %}
        <div class="band-card-row-white band-forecast-aq-row row"> {# AirNowDrupal #115 #}
          {{ renderBlock('forecast_aq_data_block') }}
        </div>
      {% endif %}

  </div>
</article>
